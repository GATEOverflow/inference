name: Build loadgen wheels and release them into PYPI

on:
  release:
    types: [published]
  push:
    branches:
      - master
      - loadgen-dev
    paths:
      - loadgen/**

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
      contents: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3

      # Step 3: Check if VERSION file has changed in this push
      - name: Check if VERSION file has changed
        id: version_changed
        run: |
          if git diff --name-only HEAD~1 | grep -q "VERSION"; then
            echo "VERSION file has been modified"
            echo "::set-output name=version_changed::true"
            new_version=$(cat VERSION)
          else
            echo "VERSION file has NOT been modified"
            echo "::set-output name=version_changed::false"
          fi
          echo "::set-output name=new_version::$new_version"

      # Step 4: Increment version if VERSION was not changed
      - name: Increment version if necessary
        id: do_version_increment
        if: steps.version_changed.outputs.version_changed == 'false'
        run: |
          cd loadgen
          # Check if VERSION file exists, else initialize it
          if [ ! -f VERSION ]; then
            echo "0.0.0" > VERSION
          fi

          version=$(cat VERSION)
          IFS='.' read -r major minor patch <<< "$version"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          echo $new_version > VERSION
          echo "New version: $new_version"
          echo "::set-output name=new_version::$new_version"

      # Step 5: Commit the updated version to the repository
      - name: Commit updated version
        if: steps.version_changed.outputs.version_changed == 'false' && runner.os == 'Linux'
        run: |
          cd loadgen
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add VERSION
          git commit -m "Increment version to ${{ steps.do_version_increment.outputs.new_version }}"
          git push

      - name: Install requirements
        run: python -m pip install cibuildwheel twine

      - name: Build wheels
        run: python -m cibuildwheel loadgen/ --output-dir wheels

      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verify-metadata: true
          skip-existing: true
          packages-dir: wheels
          repository-url: https://upload.pypi.org/legacy/
          verbose: true
